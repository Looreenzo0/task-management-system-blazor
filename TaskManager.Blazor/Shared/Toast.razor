@inject TaskManager.Blazor.Services.ToastService ToastService

@if (visible)
{
        <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1100;">
            <div class="toast show align-items-center text-bg-@toastType border-0" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        <strong>@toastTitle:</strong> @toastMessage
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" @onclick="Hide"></button>
                </div>
            </div>
        </div>
}

@code {
    private bool visible;
    private string toastMessage = string.Empty;
    private string toastType = "info";
    private string toastTitle = "Info";
    private System.Timers.Timer timer = new();

    protected override void OnInitialized()
    {
        ToastService.OnShow += Show;
    }

    public void Show(string message, string type, string title)
    {
        // Update the toast state
        toastMessage = message;
        toastType = type;
        toastTitle = title;
        visible = true;

        // Start a timer to auto-hide the toast after 5 seconds
        timer?.Dispose();
        timer = new System.Timers.Timer(5000);
        timer.Elapsed += (sender, args) => Hide();
        timer.AutoReset = false;
        timer.Start();

        // Ensure StateHasChanged is called on the UI thread
        InvokeAsync(StateHasChanged);
    }

    private void Hide()
    {
        visible = false;
        timer?.Dispose();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ToastService.OnShow -= Show;
        timer?.Dispose();
    }
}
